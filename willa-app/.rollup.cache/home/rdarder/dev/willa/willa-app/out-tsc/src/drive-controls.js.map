{"version":3,"file":"drive-controls.js","sourceRoot":"","sources":["../../src/drive-controls.ts"],"names":[],"mappings":"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","sourcesContent":["import * as flatbuffers from 'flatbuffers';\nimport { LitElement, PropertyValues, css, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nimport { Willa } from './serialization.js';\nimport { MotorControl, MotorMode } from './motor.js';\nimport { SteeringChange } from './steering.js';\nimport settings from '@settings/default';\n\nexport interface DriveCommand {\n  steering: number;\n  motorControl: MotorControl;\n}\n\nexport class DriveCommandSender {\n  private recurringCommand: number | null = null;\n  private webSocket: WebSocket | null = null;\n  private command: DriveCommand = {\n    steering: 0,\n    motorControl: { mode: MotorMode.idle },\n  };\n\n  enable(webSocket: WebSocket): void {\n    this.webSocket = webSocket;\n    this.disable();\n    this.recurringCommand = window.setInterval(\n      this.sendCommand,\n      settings.sendCommandIntervalMillis\n    );\n  }\n\n  disable(): void {\n    if (this.recurringCommand !== null) {\n      clearTimeout(this.recurringCommand!);\n    }\n  }\n  updateSteering(steering: number): void {\n    this.command.steering = steering;\n  }\n  updateMotorControl(motorControl: MotorControl): void {\n    this.command.motorControl = motorControl;\n  }\n\n  private sendCommand = (): void => {\n    if (this.webSocket === null) {\n      throw new Error('no websocket');\n    }\n    const builder = new flatbuffers.Builder(100);\n    Willa.DriveController.DriveControl.startDriveControl(builder);\n    Willa.DriveController.DriveControl.addSteer(builder, this.command.steering);\n    Willa.DriveController.DriveControl.addMotorMode(\n      builder,\n      DriveCommandSender.serializeMotorMode(this.command.motorControl.mode)\n    );\n    if (\n      this.command.motorControl.mode === MotorMode.forward ||\n      this.command.motorControl.mode === MotorMode.reverse\n    ) {\n      Willa.DriveController.DriveControl.addMotorPower(\n        builder,\n        this.command.motorControl.power\n      );\n    }\n    const endPos = Willa.DriveController.DriveControl.endDriveControl(builder);\n    builder.finish(endPos);\n    const buf = builder.asUint8Array();\n    this.webSocket.send(buf);\n  };\n  static serializeMotorMode(mode: MotorMode): Willa.DriveController.MotorMode {\n    switch (mode) {\n      case MotorMode.idle:\n        return Willa.DriveController.MotorMode.Idle;\n      case MotorMode.brake:\n        return Willa.DriveController.MotorMode.Brake;\n      case MotorMode.forward:\n        return Willa.DriveController.MotorMode.Forward;\n      case MotorMode.reverse:\n        return Willa.DriveController.MotorMode.Reverse;\n      default:\n        throw new Error('unknown motor mode');\n    }\n  }\n}\n\n@customElement('drive-controls')\nexport class DriveControls extends LitElement {\n  @property({ type: Object, attribute: false })\n  webSocket: WebSocket | null = null;\n\n  @state()\n  private steering: number = 0;\n\n  @state()\n  private motorControl: MotorControl = { mode: MotorMode.idle };\n\n  private commandSender = new DriveCommandSender();\n\n  static get styles() {\n    return css`\n      :host {\n        height: 100vh;\n        width: 100vw;\n        overflow: hidden;\n        display: flex;\n        flex-direction: row;\n        align-items: stretch;\n      }\n    `;\n  }\n\n  willUpdate(changedProperties: PropertyValues<this>) {\n    if (changedProperties.has('webSocket')) {\n      this.commandSender.disable();\n      if (this.webSocket !== null) {\n        this.commandSender.enable(this.webSocket);\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <drive-steering\n        .current=${this.steering}\n        @change=${this.onSteeringChange}\n      ></drive-steering>\n      <drive-motor\n        .current=${this.motorControl}\n        @change=${this.onMotorControlChange}\n      ></drive-motor>\n    `;\n  }\n\n  private onSteeringChange(event: CustomEvent<SteeringChange>): void {\n    this.commandSender.updateSteering(\n      (event.detail as SteeringChange).steering\n    );\n  }\n  private onMotorControlChange(event: CustomEvent<MotorControl>): void {\n    this.commandSender.updateMotorControl(event.detail as MotorControl);\n  }\n}\n"]}