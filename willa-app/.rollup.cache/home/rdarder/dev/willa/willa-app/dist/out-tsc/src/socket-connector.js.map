{"version":3,"file":"socket-connector.js","sourceRoot":"","sources":["../../../src/socket-connector.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  LitElement,\n  ReactiveController,\n  ReactiveControllerHost,\n  TemplateResult,\n  html,\n} from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nexport class WebSocketConnectorController implements ReactiveController {\n  host: ReactiveControllerHost;\n\n  isConnected: boolean = false;\n  isConnecting: boolean = false;\n  hasEverConnected: boolean = false;\n  consecutiveErrors: number = 0;\n  websocket?: WebSocket;\n  private wantsToConnect: boolean = false;\n\n  constructor(host: ReactiveControllerHost) {\n    this.host = host;\n    host.addController(this);\n  }\n  hostDisconnected(): void {\n    this.disconnect();\n  }\n\n  connect(): void {\n    this.wantsToConnect = true;\n    if (!this.isConnected) {\n      this.establishConnection();\n    }\n    this.host.requestUpdate();\n  }\n  disconnect(): void {\n    this.wantsToConnect = false;\n    if (this.isConnected) {\n      this.websocket!.close();\n    }\n    this.host.requestUpdate();\n  }\n\n  private establishConnection(): void {\n    // const host = window.location.host;\n    this.isConnecting = true;\n    const host = 'localhost:5000';\n    const ws = new WebSocket(`ws://${host}/controller`);\n    ws.onerror = () => {\n      this.onConnectionError();\n    };\n    ws.onopen = (ev: Event) => {\n      this.onConnectionOpen(ev);\n    };\n  }\n  private onConnectionError(): void {\n    this.isConnected = false;\n    this.websocket = undefined;\n    this.consecutiveErrors += 1;\n    this.host.requestUpdate();\n    if (this.wantsToConnect) {\n      setTimeout(() => {\n        this.establishConnection();\n      }, Math.max(this.consecutiveErrors * 1000, 3000));\n    }\n  }\n  private onConnectionOpen(ev: Event): void {\n    if (!this.wantsToConnect) {\n      this.disconnect();\n    } else {\n      this.isConnected = true;\n      this.hasEverConnected = true;\n      this.consecutiveErrors = 0;\n      this.websocket = ev.target as WebSocket;\n    }\n    this.host.requestUpdate();\n  }\n}\n\n@customElement('websocket-connector')\nexport class WebSocketConnector extends LitElement {\n  @property({ type: Boolean })\n  isConnected: boolean = false;\n\n  @property({ type: Boolean })\n  isConnecting: boolean = false;\n\n  @property({ type: Boolean })\n  hasEverConnected: boolean = false;\n\n  @property({ type: Number })\n  consecutiveErrors: number = 0;\n\n  protected render(): TemplateResult {\n    if (this.isConnected) {\n      return html`<div>Connected</div>`;\n    } else if (this.isConnecting) {\n      if (this.hasEverConnected) {\n        return html`<div>Reconnecting (${this.consecutiveErrors} errors)</div>`;\n      } else {\n        return html`<div>\n          Connecting...\n          <button @click=${this.clickDisconnect}>Cancel</button>\n        </div>`;\n      }\n    } else {\n      return html`<div>\n        <p>Not Connected</p>\n        <button @click=${this.clickConnect}>Connect</button>\n      </div>`;\n    }\n  }\n\n  clickConnect(): void {\n    this.dispatchEvent(new CustomEvent('connect'));\n  }\n  clickDisconnect(): void {\n    this.dispatchEvent(new CustomEvent('disconnect'));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'websocket-connector': WebSocketConnector;\n  }\n}\n"]}