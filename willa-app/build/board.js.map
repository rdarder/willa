{"version":3,"file":"board.js","sourceRoot":"","sources":["../src/board.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, css, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport './button';\n\nexport enum LightsState {\n  on,\n  off,\n  high,\n}\nexport enum DriveMode {\n  handling,\n  race,\n}\n\nexport interface BoardState {\n  lights: LightsState;\n  horn: boolean;\n  mode: DriveMode;\n}\n\n@customElement('control-board')\nclass ControlBoard extends LitElement {\n  @state()\n  lights: LightsState = LightsState.off;\n  @state()\n  horn: boolean = false;\n  @state()\n  race: boolean = false;\n  @property({ type: Boolean })\n  debug: boolean = false;\n\n  static get styles() {\n    return css`\n      :host {\n        margin: 10px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        flex-grow: 1;\n      }\n      .spacer {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n      }\n      .row {\n        display: flex;\n        flex-direction: row;\n      }\n    `;\n  }\n\n  render() {\n    return html`\n      <div class=\"row\">\n        <toggle-button @touchend=${this.exit} size=\"medium\">\n          <icon-exit></icon-exit>\n        </toggle-button>\n        <toggle-button\n          @touchend=\"${this.toggleRace}\"\n          ?toggled=${this.race}\n          size=\"medium\"\n        >\n          <icon-race></icon-race>\n        </toggle-button>\n        <toggle-button\n          @touchend=${this.toggleDebug}\n          size=\"medium\"\n          ?toggled=${this.debug}\n        >\n          <icon-debug></icon-debug>\n        </toggle-button>\n      </div>\n      <toggle-choices\n        @select=${this.lightsChange}\n        selected=${LightsState[this.lights]}\n      >\n        <toggle-button-choice value=\"off\" size=\"medium\">\n          <icon-lights-off></icon-lights-off>\n        </toggle-button-choice>\n        <toggle-button-choice value=\"on\" size=\"medium\">\n          <icon-lights-on></icon-lights-on>\n        </toggle-button-choice>\n        <toggle-button-choice value=\"high\" size=\"medium\">\n          <icon-lights-high></icon-lights-high>\n        </toggle-button-choice>\n      </toggle-choices>\n      <div class=\"spacer\"></div>\n      <toggle-button\n        @touchstart=${this.hornPressed}\n        @touchend=${this.hornReleased}\n        ?toggled=${this.horn}\n        size=\"large\"\n      >\n        <icon-horn></icon-horn>\n      </toggle-button>\n    `;\n  }\n  private exit() {\n    this.dispatchEvent(\n      new CustomEvent('exit', { bubbles: true, composed: true })\n    );\n  }\n  private hornPressed() {\n    this.horn = true;\n    navigator.vibrate([200]);\n    this.emitChange();\n  }\n  private hornReleased() {\n    this.horn = false;\n    this.emitChange();\n  }\n\n  private toggleRace() {\n    this.race = !this.race;\n    this.emitChange();\n  }\n\n  private toggleDebug() {\n    this.dispatchEvent(\n      new CustomEvent('toggleDebug', { bubbles: true, composed: true })\n    );\n  }\n\n  private lightsChange(e: CustomEvent) {\n    this.lights = LightsState[e.detail as keyof typeof LightsState];\n    this.emitChange();\n  }\n  private emitChange() {\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {\n          horn: this.horn,\n          lights: this.lights,\n          mode: this.race ? DriveMode.race : DriveMode.handling,\n        },\n      })\n    );\n  }\n}\n"]}