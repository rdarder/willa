{"version":3,"file":"router.js","sourceRoot":"","sources":["../src/router.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAoB,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,OAAO,EACL,gBAAgB,EAChB,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,oBAAoB,CAAC;AAC5B,OAAO,kBAAkB,CAAC;AAC1B,OAAO,QAAQ,MAAM,YAAY,CAAC;AAG3B,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,UAAU;IAA/B;;QACG,cAAS,GAAG,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC;IAmD7D,CAAC;IAlDW,YAAY,CACpB,kBAAqE,IAC9D,CAAC;IACV,MAAM,KAAK,MAAM;QACf,OAAO,GAAG,CAAA;;;;;;KAMT,CAAC;IACJ,CAAC;IACD,MAAM;QACJ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,gBAAgB,CAAC,SAAS,EAAE;YACvD,OAAO,IAAI,CAAA;qBACI,IAAI,CAAC,SAAS,CAAC,SAAS;gBAC7B,IAAI,CAAC,gBAAgB;yBACZ,CAAC;SACrB;aAAM;YACL,OAAO,IAAI,CAAA;kBACC,IAAI,CAAC,SAAS,CAAC,MAAM;6BACV,IAAI,CAAC,SAAS,CAAC,iBAAiB;mBAC1C,IAAI,CAAC,OAAO;uBACR,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;8BAC1B,CAAC;SAC1B;IACH,CAAC;IAEO,KAAK,CAAC,gBAAgB;QAC5B,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;QAC5B,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,QAAQ,CAAC,iBAAiB,EAAE;YAC9B,MAAM,QAAQ,CAAC,cAAc,EAAE,CAAC;SACjC;IACH,CAAC;IACO,KAAK,CAAC,OAAO;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,QAAQ,CAAC,UAAU,EAAE;YACvB,IAAI;gBACF,MAAM,QAAQ,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;aACpD;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAC;aACzD;SACF;QACD,IAAI;YACF,MAAM,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACpD;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAC;SAC3D;IACH,CAAC;CACF,CAAA;AApDY,MAAM;IADlB,aAAa,CAAC,cAAc,CAAC;GACjB,MAAM,CAoDlB;SApDY,MAAM","sourcesContent":["import { LitElement, PropertyValueMap, css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport {\n  ConnectionStatus,\n  WebSocketConnectorController,\n} from './socket-connector';\nimport './socket-connector';\nimport './drive-controls';\nimport settings from './settings';\n\n@customElement('willa-router')\nexport class Router extends LitElement {\n  private connector = new WebSocketConnectorController(this);\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {}\n  static get styles() {\n    return css`\n      :host {\n        display: flex;\n        align-items: center;\n        flex-grow: 1;\n      }\n    `;\n  }\n  render() {\n    if (this.connector.status == ConnectionStatus.CONNECTED) {\n      return html`<drive-controls\n        .webSocket=${this.connector.websocket}\n        @exit=${this.driveControlExit}\n      ></drive-controls>`;\n    } else {\n      return html`<websocket-connector\n        .status=${this.connector.status}\n        .consecutiveErrors=${this.connector.consecutiveErrors}\n        @connect=${this.connect}\n        @disconnect=\"${() => this.connector.disconnect()}\"\n      ></websocket-connector>`;\n    }\n  }\n\n  private async driveControlExit() {\n    this.connector.disconnect();\n    await screen.orientation.unlock();\n    if (document.fullscreenElement) {\n      await document.exitFullscreen();\n    }\n  }\n  private async connect() {\n    this.connector.connect();\n    if (settings.fullScreen) {\n      try {\n        await document.documentElement.requestFullscreen();\n      } catch (e) {\n        console.error('Could not set the app in fullscreen', e);\n      }\n    }\n    try {\n      await screen.orientation.lock('landscape-primary');\n    } catch (e) {\n      console.error('Could not lock the screen orientation', e);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'willa-router': Router;\n  }\n}\n"]}